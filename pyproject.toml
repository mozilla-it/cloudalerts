[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[[tool.poetry.source]]
name = "mozilla-it"
url = "https://dp2-prod.appspot.com/pypi"

################
#    Tools     #
################

[tool.poetry]
name = "cloudalerts"
version = "0.0.7"
description = "Python tool for accessing mozilla cloud alerting services."
authors = [
    "Adam Frank <afrank@mozilla.com>",
    "Bryan Sieber <bsieber@mozilla.com>",
    "Chris Valaas <cvalaas@mozilla.com>",
    "Jorge Spiropulo <jspiropulo@mozilla.com>"
]
readme = "README.md"
homepage = "https://github.com/mozilla-it/cloudalerts"
repository = "https://github.com/mozilla-it/cloudalerts"
documentation = "https://mozilla-it.github.io/cloudalerts"

classifiers = [
    "Topic :: Software Development"
]

[tool.poetry.dependencies]
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = ">=3.7, <4"
google-cloud-logging = "*"
jinja2 = "^2.11.2"
python-json-logger = "^0.1.11"
structlog = "^20.1.0"
deprecated = "^1.2.10"

[tool.poetry.dev-dependencies]
pre-commit = "*"
tox = "*"
behave = "*"
sphinx = "*"
coverage = "^5.2"

# Note: Tox.skipsdist: Defaults to False but can be toggled to true if issues arise with the lack of a setup.py
pytest = "^5.4.3"
pytest-cov = "^2.10.0"
deprecated = "^1.2.10"
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py37

[testenv]
deps =
    behave
    coverage
    deprecated
    pytest
commands =
    coverage run --branch -m behave tests/bdd --junit
    coverage run --branch -a -m pytest {posargs}
    coverage report -m --omit="*/test*,.tox/*" --show-missing --fail-under=80
    coverage xml
    coverage html
"""


[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.pytest.ini_options]
python_files = "*.py"
python_functions = "test_*"
testpaths = [
    "tests",
]
